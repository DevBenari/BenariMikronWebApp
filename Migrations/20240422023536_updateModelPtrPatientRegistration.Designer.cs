// <auto-generated />
using System;
using BenariMikronWebApp.Areas.Identity.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BenariMikronWebApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240422023536_updateModelPtrPatientRegistration")]
    partial class updateModelPtrPatientRegistration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BenariMikronWebApp.Areas.CustomerRelationshipManagement.Models.MasterInsurance", b =>
                {
                    b.Property<Guid>("InsuranceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AkhirKerjasama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AkunBankAtasNama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AkunBankKartuKredit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Alamat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AlamatTagihan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bagian")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("DeleteDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Direktur")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Diskon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Jabatan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JatuhTempo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JenisKerjasama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JenisKontrak")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Keterangan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KodeAsuransi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KodePerusahaan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KodePos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KomisiKartuKredit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kota")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KriteriaPembayaran")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenjaminPasienOTC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MulaiKerjasama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaBank")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaCabang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaKontak")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaPerusahaan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomorFax")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomorRekeningBank")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomorTelepon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PerusahaanAsuransi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pinalti")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TarifGroupPerusahaan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TermasukAsuransi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TermasukAsuransiRS")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipePerusahaan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("UpdateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("InsuranceId");

                    b.ToTable("CrmMasterInsurance", "dbo");
                });

            modelBuilder.Entity("BenariMikronWebApp.Areas.Identity.Data.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NamaBelakang")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NamaDepan")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("BenariMikronWebApp.Areas.PatientRegistration.Models.NewPatient", b =>
                {
                    b.Property<Guid>("PatientRegistrationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AgamaPasien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AlamatDomisiliPasien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AlamatKantorPasien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AlamatKeluargaPasien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AlergiPasien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("DeleteDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("EmailAktifPasien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GenerateQrCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GolonganDarahPasien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HubunganKeluargaPasien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InformasiAlamatPasien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("InsuranceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("JenisKelaminPasien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KaryawanRumahSakit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KewarganegaraanPasien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KodePasien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaAyahPasien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaIbuPasien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaKantorPasien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaKeluargaTerdekatPasien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaLengkapPasien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaSutriPasien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomorIdentitasPasien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomorIdentitasSutriPasien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomorPolis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomorRekamMedisBaru")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomorRekamMedisLama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomorTeleponKantorPasien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomorTeleponKeluargaPasien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomorTeleponPasien1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomorTeleponPasien2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasienPrioritas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PekerjaanAyahPasien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PekerjaanIbuPasien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PekerjaanPasien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PekerjaanSutriPasien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PendidikanTerakhirPasien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusPasien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TanggalKelahiranPasien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TempatKelahiranPasien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("UpdateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("PatientRegistrationId");

                    b.HasIndex("InsuranceId");

                    b.ToTable("PtrNewPatient", "dbo");
                });

            modelBuilder.Entity("BenariMikronWebApp.Models.PasienBaru", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AgamaPasien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AlamatDomisiliPasien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AlamatKantorPasien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AlamatKeluargaPasien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AlergiPasien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BagianPenjamin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreateDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("EmailAktifPasien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GenerateQrCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GolonganDarahPasien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GrupPenjamin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HubunganKeluargaPasien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HubunganPenjamin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InformasiAlamatPasien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JenisKelaminPasien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KaryawanRumahSakit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KewarganegaraanPasien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KodePasien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifyBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("ModifyDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NamaAyahPasien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaIbuPasien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaKantorPasien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaKeluargaTerdekatPasien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaLengkapPasien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaPegawaiPenjamin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaSutriPasien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomorIdentitasPasien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomorIdentitasSutriPasien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomorPolisPenjamin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomorRekamMedisBaru")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomorRekamMedisLama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomorTeleponKantorPasien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomorTeleponKeluargaPasien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomorTeleponPasien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasienPrioritas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PekerjaanAyahPasien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PekerjaanIbuPasien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PekerjaanPasien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PekerjaanSutriPasien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PendidikanTerakhirPasien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PenjaminId")
                        .HasColumnType("int");

                    b.Property<string>("Perusahaan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusPasien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TanggalKelahiranPasien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TempatKelahiranPasien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PenjaminId");

                    b.ToTable("AdmPasienBaru", "dbo");
                });

            modelBuilder.Entity("BenariMikronWebApp.Models.Penjamin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AkhirKerjasama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AkunBankAtasNama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AkunBankKartuKredit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Alamat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AlamatTagihan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bagian")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreateDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Direktur")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Diskon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Jabatan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JatuhTempo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JenisKerjasama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JenisKontrak")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Keterangan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KodePenjamin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KodePerusahaan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KodePos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KomisiKartuKredit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kota")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KriteriaPembayaran")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenjaminPasienOTC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifyBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("ModifyDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MulaiKerjasama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaBank")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaCabang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaKontak")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaPerusahaan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomorFax")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomorRekeningBank")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomorTelepon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PerusahaanPenjamin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pinalti")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TarifGroupPerusahaan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TermasukPenjamin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TermasukPenjaminRS")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipePerusahaan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AdmPenjamin", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("BenariMikronWebApp.Areas.PatientRegistration.Models.NewPatient", b =>
                {
                    b.HasOne("BenariMikronWebApp.Areas.CustomerRelationshipManagement.Models.MasterInsurance", "MasterInsurance")
                        .WithMany("NewPatient")
                        .HasForeignKey("InsuranceId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("MasterInsurance");
                });

            modelBuilder.Entity("BenariMikronWebApp.Models.PasienBaru", b =>
                {
                    b.HasOne("BenariMikronWebApp.Models.Penjamin", "Penjamin")
                        .WithMany("PasienBaru")
                        .HasForeignKey("PenjaminId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Penjamin");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("BenariMikronWebApp.Areas.Identity.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("BenariMikronWebApp.Areas.Identity.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BenariMikronWebApp.Areas.Identity.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("BenariMikronWebApp.Areas.Identity.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("BenariMikronWebApp.Areas.CustomerRelationshipManagement.Models.MasterInsurance", b =>
                {
                    b.Navigation("NewPatient");
                });

            modelBuilder.Entity("BenariMikronWebApp.Models.Penjamin", b =>
                {
                    b.Navigation("PasienBaru");
                });
#pragma warning restore 612, 618
        }
    }
}
