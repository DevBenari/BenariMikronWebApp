// <auto-generated />
using System;
using BenariMikronWebApp.Areas.Identity.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BenariMikronWebApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240604143601_initializeReferenceTipeDetailReference")]
    partial class initializeReferenceTipeDetailReference
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BenariMikronWebApp.Areas.AccountingAndFinancial.Models.Bank", b =>
                {
                    b.Property<Guid>("BankId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("DeleteDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("KodeBank")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaBank")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("UpdateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("BankId");

                    b.ToTable("AccBank", "dbo");
                });

            modelBuilder.Entity("BenariMikronWebApp.Areas.AccountingAndFinancial.Models.BankCabang", b =>
                {
                    b.Property<Guid>("BankCabangId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BankId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("DeleteDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("KodeBankCabang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaCabang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("UpdateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("BankCabangId");

                    b.HasIndex("BankId");

                    b.ToTable("AccBankCabang", "dbo");
                });

            modelBuilder.Entity("BenariMikronWebApp.Areas.Administration.Models.City", b =>
                {
                    b.Property<Guid>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("DeleteDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("KodeKota")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaKota")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ProvinceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("UpdateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("ProvinceId");

                    b.ToTable("AdmCity", "dbo");
                });

            modelBuilder.Entity("BenariMikronWebApp.Areas.Administration.Models.Country", b =>
                {
                    b.Property<Guid>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("DeleteDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("KodeNegara")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaNegara")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("UpdateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("CountryId");

                    b.ToTable("AdmCountry", "dbo");
                });

            modelBuilder.Entity("BenariMikronWebApp.Areas.Administration.Models.District", b =>
                {
                    b.Property<Guid>("DistrictId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("DeleteDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("KodeKecamatan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaKecamatan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ProvinceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("UpdateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("DistrictId");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("ProvinceId");

                    b.ToTable("AdmDistrict", "dbo");
                });

            modelBuilder.Entity("BenariMikronWebApp.Areas.Administration.Models.Insurance", b =>
                {
                    b.Property<Guid>("InsuranceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AkhirKerjasama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AkunBankAtasNama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AkunBankKartuKredit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Alamat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AlamatTagihan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bagian")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("DeleteDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Direktur")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Diskon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DistrictId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Jabatan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JatuhTempo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JenisKerjasama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JenisKontrak")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Keterangan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KodeAsuransi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KodePerusahaan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KodePos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KomisiKartuKredit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KriteriaPembayaran")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenjaminPasienOTC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MulaiKerjasama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaBank")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaCabang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaKontak")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaPerusahaan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomorFax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomorRekeningBank")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomorTelepon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pinalti")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ProvinceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SubDistrictId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TarifGroupPerusahaan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TermasukAsuransi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TermasukKaryawanRS")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipePerusahaan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("UpdateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("InsuranceId");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("DistrictId");

                    b.HasIndex("ProvinceId");

                    b.HasIndex("SubDistrictId");

                    b.ToTable("AdmInsurance", "dbo");
                });

            modelBuilder.Entity("BenariMikronWebApp.Areas.Administration.Models.LastEducation", b =>
                {
                    b.Property<Guid>("LastEducationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("DeleteDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("KodePendidikanTerakhir")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaPendidikanTerakhir")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("UpdateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("LastEducationId");

                    b.ToTable("AdmLastEducation", "dbo");
                });

            modelBuilder.Entity("BenariMikronWebApp.Areas.Administration.Models.Promo", b =>
                {
                    b.Property<Guid>("PromoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("DeleteDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Keterangan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KodePromo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaPromo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("UpdateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("PromoId");

                    b.ToTable("AdmPromo", "dbo");
                });

            modelBuilder.Entity("BenariMikronWebApp.Areas.Administration.Models.Province", b =>
                {
                    b.Property<Guid>("ProvinceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("DeleteDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("KodeProvinsi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaProvinsi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("UpdateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("ProvinceId");

                    b.HasIndex("CountryId");

                    b.ToTable("AdmProvince", "dbo");
                });

            modelBuilder.Entity("BenariMikronWebApp.Areas.Administration.Models.Religion", b =>
                {
                    b.Property<Guid>("ReligionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("DeleteDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("KodeAgama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaAgama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("UpdateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("ReligionId");

                    b.ToTable("AdmReligion", "dbo");
                });

            modelBuilder.Entity("BenariMikronWebApp.Areas.Administration.Models.SubDistrict", b =>
                {
                    b.Property<Guid>("SubDistrictId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("DeleteDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("DistrictId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("KodeKelurahan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaKelurahan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ProvinceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("UpdateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("SubDistrictId");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("DistrictId");

                    b.HasIndex("ProvinceId");

                    b.ToTable("AdmSubDistrict", "dbo");
                });

            modelBuilder.Entity("BenariMikronWebApp.Areas.Administration.Models.Working", b =>
                {
                    b.Property<Guid>("WorkingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("DeleteDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("KodePekerjaan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaPekerjaan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("UpdateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("WorkingId");

                    b.ToTable("AdmWorking", "dbo");
                });

            modelBuilder.Entity("BenariMikronWebApp.Areas.HealthManagement.Models.BloodType", b =>
                {
                    b.Property<Guid>("BloodTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("DeleteDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Keterangan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KodeGolonganDarah")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaGolonganDarah")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("UpdateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("BloodTypeId");

                    b.ToTable("HmnBloodType", "dbo");
                });

            modelBuilder.Entity("BenariMikronWebApp.Areas.HealthManagement.Models.Doctor", b =>
                {
                    b.Property<Guid>("DoctorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AlamatKantorLengkap")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AlamatRumahLengkap")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankAtasNama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("BankCabangId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BankId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BankNomorRekening")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("DeleteDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DistrictId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DoctorQueueTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DoctorTitleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DoctorTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DokterMitra")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DokterSpesialis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Foto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuaranteeFee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("JenisKelamin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JenisKontrak")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kewarganegaraan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KodeDokter")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KodePos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("LastEducationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NamaLengkap")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaMarga")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomorHandphone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomorIdDokter")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomorKtpDokter")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomorTelepon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomorTeleponKantor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Npwp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ProvinceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ReligionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SubDistrictId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TanggalAkhirKontrak")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TanggalAwalKontrak")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TanggalKeluar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TanggalLahir")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TempatLahir")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("UpdateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("WorkingId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("DoctorId");

                    b.HasIndex("BankCabangId");

                    b.HasIndex("BankId");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("DistrictId");

                    b.HasIndex("DoctorQueueTypeId");

                    b.HasIndex("DoctorTitleId");

                    b.HasIndex("DoctorTypeId");

                    b.HasIndex("LastEducationId");

                    b.HasIndex("ProvinceId");

                    b.HasIndex("ReligionId");

                    b.HasIndex("SubDistrictId");

                    b.HasIndex("WorkingId");

                    b.ToTable("HmnDoctor", "dbo");
                });

            modelBuilder.Entity("BenariMikronWebApp.Areas.HealthManagement.Models.DoctorDepartment", b =>
                {
                    b.Property<Guid>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("DeleteDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Keterangan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KodeDepartemen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("LocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MulaiJamKerja")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaDepartemen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SelesaiJamKerja")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telepon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("UpdateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("DepartmentId");

                    b.HasIndex("LocationId");

                    b.ToTable("HmnDoctorDepartment", "dbo");
                });

            modelBuilder.Entity("BenariMikronWebApp.Areas.HealthManagement.Models.DoctorDepartmentLocation", b =>
                {
                    b.Property<Guid>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("DeleteDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Keterangan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KodeLokasi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaLokasi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("UpdateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("LocationId");

                    b.ToTable("HmnDepartmentLocation", "dbo");
                });

            modelBuilder.Entity("BenariMikronWebApp.Areas.HealthManagement.Models.DoctorQueueType", b =>
                {
                    b.Property<Guid>("DoctorQueueTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("DeleteDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("KodeTipeAntrian")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaTipeAntrian")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("UpdateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("DoctorQueueTypeId");

                    b.ToTable("HmnDoctorQueueType", "dbo");
                });

            modelBuilder.Entity("BenariMikronWebApp.Areas.HealthManagement.Models.DoctorTitle", b =>
                {
                    b.Property<Guid>("DoctorTitleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("DeleteDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Deskripsi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("KodeGelar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LapRL1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LapRL2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaGelar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("UpdateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("DoctorTitleId");

                    b.ToTable("HmnDoctorTitle", "dbo");
                });

            modelBuilder.Entity("BenariMikronWebApp.Areas.HealthManagement.Models.DoctorType", b =>
                {
                    b.Property<Guid>("DoctorTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("DeleteDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("KodeTipeDokter")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Persentase")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipeDokter")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("UpdateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("DoctorTypeId");

                    b.ToTable("HmnDoctorType", "dbo");
                });

            modelBuilder.Entity("BenariMikronWebApp.Areas.Identity.Data.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NamaBelakang")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NamaDepan")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("BenariMikronWebApp.Areas.PatientRegistration.Models.ExternalPatientLaboratorium", b =>
                {
                    b.Property<Guid>("ExternalPatientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AlamatLengkap")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("DeleteDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeskripsiRujukan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DetailTindakan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiagnosaAwal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DistrictId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DokterPemeriksa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailAktif")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GenerateQrCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("InsuranceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("JenisKelamin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KodePasien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KodePos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaPasien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomorIdentitasPasien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomorPolis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomorRekamMedisBaru")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomorRekamMedisLama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomorTelepon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pemeriksaan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PromoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProvinceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SubDistrictId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SuratRujukan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TanggalLahir")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TanggalSampling")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TempatLahir")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipePasien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipePemeriksaan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipeRujukan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("UpdateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("ExternalPatientId");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("DistrictId");

                    b.HasIndex("InsuranceId");

                    b.HasIndex("PromoId");

                    b.HasIndex("ProvinceId");

                    b.HasIndex("SubDistrictId");

                    b.ToTable("PtrExternalPatientLaboratorium", "dbo");
                });

            modelBuilder.Entity("BenariMikronWebApp.Areas.PatientRegistration.Models.ExternalPatientRadiologi", b =>
                {
                    b.Property<Guid>("ExternalPatientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AlamatLengkap")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("DeleteDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeskripsiRujukan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DetailTindakan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiagnosaAwal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DistrictId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DokterPemeriksa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailAktif")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GenerateQrCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("InsuranceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("JenisKelamin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KodePasien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KodePos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaPasien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomorIdentitasPasien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomorPolis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomorRekamMedisBaru")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomorRekamMedisLama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomorTelepon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pemeriksaan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Promo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ProvinceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SubDistrictId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SuratRujukan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TanggalLahir")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TempatLahir")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipePasien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipeRujukan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("UpdateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("ExternalPatientId");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("DistrictId");

                    b.HasIndex("InsuranceId");

                    b.HasIndex("ProvinceId");

                    b.HasIndex("SubDistrictId");

                    b.ToTable("PtrExternalPatientRadiologi", "dbo");
                });

            modelBuilder.Entity("BenariMikronWebApp.Areas.PatientRegistration.Models.ExternalPatientRehabilitasiMedik", b =>
                {
                    b.Property<Guid>("ExternalPatientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AlamatLengkap")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DaftarTindakan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("DeleteDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeskripsiRujukan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiagnosaAwal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DistrictId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DokterPemeriksa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailAktif")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GenerateQrCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("InsuranceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("JenisKelamin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KodePasien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KodePos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaPasien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomorIdentitasPasien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomorPolis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomorRekamMedisBaru")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomorRekamMedisLama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomorTelepon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ProvinceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SubDistrictId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SuratRujukan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TanggalLahir")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TempatLahir")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipePasien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipeRujukan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("UpdateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("ExternalPatientId");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("DistrictId");

                    b.HasIndex("InsuranceId");

                    b.HasIndex("ProvinceId");

                    b.HasIndex("SubDistrictId");

                    b.ToTable("PtrExternalPatientRehabilitasiMedik", "dbo");
                });

            modelBuilder.Entity("BenariMikronWebApp.Areas.PatientRegistration.Models.NewPatient", b =>
                {
                    b.Property<Guid>("PatientRegistrationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AlamatKantor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AlamatKeluargaPasien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AlamatLengkap")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Alergi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("BloodTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("DeleteDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("DistrictId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GenerateQrCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HubunganKeluarga")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("InsuranceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("JenisKelamin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KaryawanRumahSakit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kewarganegaraan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KodePasien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KodePos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("LastEducationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NamaAyahPasien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaIbuPasien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaKantor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaKeluargaTerdekat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaLengkapPasien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaSutriPasien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomorIdentitasPasien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomorIdentitasSutriPasien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomorPolis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomorRekamMedisBaru")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomorRekamMedisLama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomorTelepon1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomorTelepon2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomorTeleponKantor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomorTeleponKeluargaPasien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasienPrioritas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pekerjaan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PekerjaanAyahPasien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PekerjaanIbuPasien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PekerjaanSutriPasien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ProvinceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ReligionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StatusPasien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SubDistrictId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TanggalLahir")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TempatLahir")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipePasien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("UpdateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("PatientRegistrationId");

                    b.HasIndex("BloodTypeId");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("DistrictId");

                    b.HasIndex("InsuranceId");

                    b.HasIndex("ProvinceId");

                    b.HasIndex("SubDistrictId");

                    b.ToTable("PtrNewPatient", "dbo");
                });

            modelBuilder.Entity("BenariMikronWebApp.Areas.PatientRegistration.Models.Reference", b =>
                {
                    b.Property<Guid>("ReferenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("DeleteDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("KodeRujukan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaRujukan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("UpdateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("ReferenceId");

                    b.ToTable("PtrReference", "dbo");
                });

            modelBuilder.Entity("BenariMikronWebApp.Areas.PatientRegistration.Models.ReferenceType", b =>
                {
                    b.Property<Guid>("ReferenceTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("DeleteBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("DeleteDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("KodeTipeRujukan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaTipeRujukan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ReferenceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("UpdateDateTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("ReferenceTypeId");

                    b.HasIndex("ReferenceId");

                    b.ToTable("PtrReferenceType", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("BenariMikronWebApp.Areas.AccountingAndFinancial.Models.BankCabang", b =>
                {
                    b.HasOne("BenariMikronWebApp.Areas.AccountingAndFinancial.Models.Bank", "Bank")
                        .WithMany("BankCabang")
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Bank");
                });

            modelBuilder.Entity("BenariMikronWebApp.Areas.Administration.Models.City", b =>
                {
                    b.HasOne("BenariMikronWebApp.Areas.Administration.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BenariMikronWebApp.Areas.Administration.Models.Province", "Province")
                        .WithMany("City")
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Country");

                    b.Navigation("Province");
                });

            modelBuilder.Entity("BenariMikronWebApp.Areas.Administration.Models.District", b =>
                {
                    b.HasOne("BenariMikronWebApp.Areas.Administration.Models.City", "City")
                        .WithMany("District")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BenariMikronWebApp.Areas.Administration.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BenariMikronWebApp.Areas.Administration.Models.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("City");

                    b.Navigation("Country");

                    b.Navigation("Province");
                });

            modelBuilder.Entity("BenariMikronWebApp.Areas.Administration.Models.Insurance", b =>
                {
                    b.HasOne("BenariMikronWebApp.Areas.Administration.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BenariMikronWebApp.Areas.Administration.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BenariMikronWebApp.Areas.Administration.Models.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BenariMikronWebApp.Areas.Administration.Models.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BenariMikronWebApp.Areas.Administration.Models.SubDistrict", "SubDistrict")
                        .WithMany()
                        .HasForeignKey("SubDistrictId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("City");

                    b.Navigation("Country");

                    b.Navigation("District");

                    b.Navigation("Province");

                    b.Navigation("SubDistrict");
                });

            modelBuilder.Entity("BenariMikronWebApp.Areas.Administration.Models.Province", b =>
                {
                    b.HasOne("BenariMikronWebApp.Areas.Administration.Models.Country", "Country")
                        .WithMany("Province")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Country");
                });

            modelBuilder.Entity("BenariMikronWebApp.Areas.Administration.Models.SubDistrict", b =>
                {
                    b.HasOne("BenariMikronWebApp.Areas.Administration.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BenariMikronWebApp.Areas.Administration.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BenariMikronWebApp.Areas.Administration.Models.District", "District")
                        .WithMany("SubDistrict")
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BenariMikronWebApp.Areas.Administration.Models.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("City");

                    b.Navigation("Country");

                    b.Navigation("District");

                    b.Navigation("Province");
                });

            modelBuilder.Entity("BenariMikronWebApp.Areas.HealthManagement.Models.Doctor", b =>
                {
                    b.HasOne("BenariMikronWebApp.Areas.AccountingAndFinancial.Models.BankCabang", "BankCabang")
                        .WithMany()
                        .HasForeignKey("BankCabangId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BenariMikronWebApp.Areas.AccountingAndFinancial.Models.Bank", "Bank")
                        .WithMany()
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BenariMikronWebApp.Areas.Administration.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BenariMikronWebApp.Areas.Administration.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BenariMikronWebApp.Areas.HealthManagement.Models.DoctorDepartment", "DoctorDepartment")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BenariMikronWebApp.Areas.Administration.Models.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BenariMikronWebApp.Areas.HealthManagement.Models.DoctorQueueType", "DoctorQueueType")
                        .WithMany()
                        .HasForeignKey("DoctorQueueTypeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BenariMikronWebApp.Areas.HealthManagement.Models.DoctorTitle", "DoctorTitle")
                        .WithMany()
                        .HasForeignKey("DoctorTitleId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BenariMikronWebApp.Areas.HealthManagement.Models.DoctorType", "DoctorType")
                        .WithMany()
                        .HasForeignKey("DoctorTypeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BenariMikronWebApp.Areas.Administration.Models.LastEducation", "LastEducation")
                        .WithMany()
                        .HasForeignKey("LastEducationId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BenariMikronWebApp.Areas.Administration.Models.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BenariMikronWebApp.Areas.Administration.Models.Religion", "Religion")
                        .WithMany()
                        .HasForeignKey("ReligionId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BenariMikronWebApp.Areas.Administration.Models.SubDistrict", "SubDistrict")
                        .WithMany()
                        .HasForeignKey("SubDistrictId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BenariMikronWebApp.Areas.Administration.Models.Working", "Working")
                        .WithMany()
                        .HasForeignKey("WorkingId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Bank");

                    b.Navigation("BankCabang");

                    b.Navigation("City");

                    b.Navigation("Country");

                    b.Navigation("District");

                    b.Navigation("DoctorDepartment");

                    b.Navigation("DoctorQueueType");

                    b.Navigation("DoctorTitle");

                    b.Navigation("DoctorType");

                    b.Navigation("LastEducation");

                    b.Navigation("Province");

                    b.Navigation("Religion");

                    b.Navigation("SubDistrict");

                    b.Navigation("Working");
                });

            modelBuilder.Entity("BenariMikronWebApp.Areas.HealthManagement.Models.DoctorDepartment", b =>
                {
                    b.HasOne("BenariMikronWebApp.Areas.HealthManagement.Models.DoctorDepartmentLocation", "DepartmentLocation")
                        .WithMany("DoctorDepartments")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("DepartmentLocation");
                });

            modelBuilder.Entity("BenariMikronWebApp.Areas.PatientRegistration.Models.ExternalPatientLaboratorium", b =>
                {
                    b.HasOne("BenariMikronWebApp.Areas.Administration.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BenariMikronWebApp.Areas.Administration.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BenariMikronWebApp.Areas.Administration.Models.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BenariMikronWebApp.Areas.Administration.Models.Insurance", "Insurance")
                        .WithMany()
                        .HasForeignKey("InsuranceId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BenariMikronWebApp.Areas.Administration.Models.Promo", "Promo")
                        .WithMany()
                        .HasForeignKey("PromoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BenariMikronWebApp.Areas.Administration.Models.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BenariMikronWebApp.Areas.Administration.Models.SubDistrict", "SubDistrict")
                        .WithMany()
                        .HasForeignKey("SubDistrictId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("City");

                    b.Navigation("Country");

                    b.Navigation("District");

                    b.Navigation("Insurance");

                    b.Navigation("Promo");

                    b.Navigation("Province");

                    b.Navigation("SubDistrict");
                });

            modelBuilder.Entity("BenariMikronWebApp.Areas.PatientRegistration.Models.ExternalPatientRadiologi", b =>
                {
                    b.HasOne("BenariMikronWebApp.Areas.Administration.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BenariMikronWebApp.Areas.Administration.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BenariMikronWebApp.Areas.Administration.Models.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BenariMikronWebApp.Areas.Administration.Models.Insurance", "Insurance")
                        .WithMany()
                        .HasForeignKey("InsuranceId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BenariMikronWebApp.Areas.Administration.Models.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BenariMikronWebApp.Areas.Administration.Models.SubDistrict", "SubDistrict")
                        .WithMany()
                        .HasForeignKey("SubDistrictId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("City");

                    b.Navigation("Country");

                    b.Navigation("District");

                    b.Navigation("Insurance");

                    b.Navigation("Province");

                    b.Navigation("SubDistrict");
                });

            modelBuilder.Entity("BenariMikronWebApp.Areas.PatientRegistration.Models.ExternalPatientRehabilitasiMedik", b =>
                {
                    b.HasOne("BenariMikronWebApp.Areas.Administration.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BenariMikronWebApp.Areas.Administration.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BenariMikronWebApp.Areas.Administration.Models.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BenariMikronWebApp.Areas.Administration.Models.Insurance", "Insurance")
                        .WithMany()
                        .HasForeignKey("InsuranceId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BenariMikronWebApp.Areas.Administration.Models.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BenariMikronWebApp.Areas.Administration.Models.SubDistrict", "SubDistrict")
                        .WithMany()
                        .HasForeignKey("SubDistrictId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("City");

                    b.Navigation("Country");

                    b.Navigation("District");

                    b.Navigation("Insurance");

                    b.Navigation("Province");

                    b.Navigation("SubDistrict");
                });

            modelBuilder.Entity("BenariMikronWebApp.Areas.PatientRegistration.Models.NewPatient", b =>
                {
                    b.HasOne("BenariMikronWebApp.Areas.HealthManagement.Models.BloodType", "BloodType")
                        .WithMany()
                        .HasForeignKey("BloodTypeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BenariMikronWebApp.Areas.Administration.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BenariMikronWebApp.Areas.Administration.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BenariMikronWebApp.Areas.Administration.Models.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BenariMikronWebApp.Areas.Administration.Models.Insurance", "Insurance")
                        .WithMany("NewPatient")
                        .HasForeignKey("InsuranceId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BenariMikronWebApp.Areas.Administration.Models.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BenariMikronWebApp.Areas.Administration.Models.SubDistrict", "SubDistrict")
                        .WithMany()
                        .HasForeignKey("SubDistrictId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("BloodType");

                    b.Navigation("City");

                    b.Navigation("Country");

                    b.Navigation("District");

                    b.Navigation("Insurance");

                    b.Navigation("Province");

                    b.Navigation("SubDistrict");
                });

            modelBuilder.Entity("BenariMikronWebApp.Areas.PatientRegistration.Models.ReferenceType", b =>
                {
                    b.HasOne("BenariMikronWebApp.Areas.PatientRegistration.Models.Reference", "Reference")
                        .WithMany("ReferenceType")
                        .HasForeignKey("ReferenceId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Reference");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("BenariMikronWebApp.Areas.Identity.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("BenariMikronWebApp.Areas.Identity.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BenariMikronWebApp.Areas.Identity.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("BenariMikronWebApp.Areas.Identity.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("BenariMikronWebApp.Areas.AccountingAndFinancial.Models.Bank", b =>
                {
                    b.Navigation("BankCabang");
                });

            modelBuilder.Entity("BenariMikronWebApp.Areas.Administration.Models.City", b =>
                {
                    b.Navigation("District");
                });

            modelBuilder.Entity("BenariMikronWebApp.Areas.Administration.Models.Country", b =>
                {
                    b.Navigation("Province");
                });

            modelBuilder.Entity("BenariMikronWebApp.Areas.Administration.Models.District", b =>
                {
                    b.Navigation("SubDistrict");
                });

            modelBuilder.Entity("BenariMikronWebApp.Areas.Administration.Models.Insurance", b =>
                {
                    b.Navigation("NewPatient");
                });

            modelBuilder.Entity("BenariMikronWebApp.Areas.Administration.Models.Province", b =>
                {
                    b.Navigation("City");
                });

            modelBuilder.Entity("BenariMikronWebApp.Areas.HealthManagement.Models.DoctorDepartmentLocation", b =>
                {
                    b.Navigation("DoctorDepartments");
                });

            modelBuilder.Entity("BenariMikronWebApp.Areas.PatientRegistration.Models.Reference", b =>
                {
                    b.Navigation("ReferenceType");
                });
#pragma warning restore 612, 618
        }
    }
}
